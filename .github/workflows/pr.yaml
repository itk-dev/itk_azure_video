on: pull_request
name: PR Review
jobs:
  changelog:
    name: Changelog should be updated
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  php-coding-standards:
    name: PHP coding standards
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.1', '8.3', '8.4' ]
        dependency-version: [ prefer-stable ]
    steps:
      - uses: actions/checkout@master
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: json
          coverage: none
          tools: composer:v2
      # https://github.com/shivammathur/setup-php#cache-composer-dependencies
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: PHPCS
        run: |
          composer coding-standards-check/phpcs

  php-code-analysis:
    name: PHP code analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        drupal-version:
          - 10
          # Installing with sqlite does not yet work with Drupal 11 (cf. https://github.com/docker-library/drupal/issues/264)
          # - 11
    steps:
      - uses: actions/checkout@v4
      - name: Code analysis
        run: |
          DRUPAL_VERSION=${{ matrix.drupal-version }} ./scripts/code-analysis

  markdown-coding-standards:
    runs-on: ubuntu-latest
    name: Markdown coding standards
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn packages
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install
      - name: coding-standards-check
        run: yarn coding-standards-check
